@inject IAdminService AdminService
@*@inject SignInManager<VODUser> SignInManager*@

@*@if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
{*@
    @if(!string.IsNullOrEmpty(Alert))
    {
        <div class="d-flex">
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <strong>@Alert</strong>
                <button type="button" @onclick="CloseAlert" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        </div>
    }

    @if (navigation == PageType.Create)
    {
    <CreateCourse IsAdmin=@IsAdmin OnCreate="OnCreate"></CreateCourse>
    }
    @if (navigation == PageType.Delete)
    {
        <DeleteCourse IsAdmin=@IsAdmin></DeleteCourse>
    }
    @if (navigation == PageType.Edit)
    {
        <EditCourse IsAdmin=@IsAdmin></EditCourse>
    }

<div class="d-flex me-1">
    <a href="/" class="btn btn-outline-secondary rounded-0 me-1">Home</a>
    <button type="button" class="btn btn-outline-primary rounded-0 me-1" @onclick="()=>ChangePageType(PageType.Index)">Index</button>
    <button type="button" class="btn btn-outline-success rounded-0" @onclick="()=>ChangePageType(PageType.Create)">Create</button>
</div>
<CoursesIndex IsAdmin=@IsAdmin OnClick="OnClick" Model="Model"></CoursesIndex>



@*}*@

@code {
    [Parameter] public bool IsAdmin { get; set; }
    string navigation = PageType.Index;
    public List<CourseDTO> Model { get; set; } = new();
    public string Alert { get; set; } = "";

    void ChangePageType(string pageType) => navigation = pageType;

    protected override async Task OnInitializedAsync()
    {
        Alert = "";
        Model = await AdminService.GetCourses();
    }

    void CloseAlert()
    {
        Alert = "";
    }

    void OnClick(string type)
    {
        ChangePageType(type);
        StateHasChanged();
    }

    async Task OnCreate(string alert)
    {
        try
        {
            Alert = alert;
            Model = await AdminService.GetCourses();
            ChangePageType(PageType.Index);
        }
        catch
        {
            Alert = "Couldn't create the course.";
        }
    }
}
